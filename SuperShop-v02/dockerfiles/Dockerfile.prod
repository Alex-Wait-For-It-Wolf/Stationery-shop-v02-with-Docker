###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /home/ubuntu/project01/SuperShop-v02

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add --no-cache postgresql-dev gcc python3-dev musl-dev cairo \
    cairo-tools \ 
    jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev \ 
    tcl-dev libffi-dev cairo-dev pango-dev gdk-pixbuf

# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /home/ubuntu/project01/SuperShop-v02/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the ubuntu user
RUN mkdir -p /home/ubuntu

# create the ubuntu user
RUN addgroup -S ubuntu && adduser -S ubuntu -G ubuntu

# create the appropriate directories
ENV HOME=/home/ubuntu
ENV APP_HOME=/home/ubuntu/SuperShop-v02
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apk update \
    && apk add --no-cache libpq cairo cairo-tools \ 
    jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev \ 
    tcl-dev libffi-dev cairo-dev pango-dev gdk-pixbuf

COPY --from=builder /home/ubuntu/project01/SuperShop-v02/wheels /wheels
COPY --from=builder /home/ubuntu/project01/SuperShop-v02/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the ubuntu user
RUN chown -R ubuntu:ubuntu $APP_HOME

# change to the ubuntu user
USER ubuntu

# run entrypoint.prod.sh
ENTRYPOINT ["/home/ubuntu/SuperShop-v02/entrypoint.prod.sh"]
