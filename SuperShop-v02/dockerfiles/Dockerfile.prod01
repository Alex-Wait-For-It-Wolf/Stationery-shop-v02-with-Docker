FROM python:3.7-alpine as base

ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1

COPY /requirements/_base.txt /requirements/production.txt ./
RUN apk add --update --no-cache --virtual .build-deps \
    postgresql-dev gcc python3-dev musl-dev cairo \
    cairo-tools \ 
    jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev \ 
    tcl-dev libffi-dev cairo-dev pango-dev gdk-pixbuf \
    && pip install --no-cache-dir -r production.txt 

# Now multistage builds
FROM python:3.7-alpine

# create directory for the abraham_linc user
RUN mkdir -p /home/abraham_linc

# create abraham_linc user
RUN addgroup -S abraham_linc && adduser -S abraham_linc -G abraham_linc

# create the appropriate directories
ENV HOME=/home/abraham_linc
ENV APP_HOME=/home/abraham_linc/web_app
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

RUN apk add --update --no-cache libpq cairo cairo-tools \ 
    jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev \ 
    tcl-dev libffi-dev cairo-dev pango-dev gdk-pixbuf

COPY --from=base /usr/local/lib/python3.7/site-packages/ /usr/local/lib/python3.7/site-packages/
COPY --from=base /usr/local/bin/ /usr/local/bin/

ENV PYTHONPATH /home/abraham_linc/web_app:$PYTHONPATH

# copy entrypoint-prod.sh
# COPY ./entrypoints/entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the abraham_linc user
RUN chown -R abraham_linc:abraham_linc $APP_HOME

# change to the abraham_linc user
USER abraham_linc

ENTRYPOINT ["/home/abraham_linc/web_app/entrypoints/entrypoint.prod.sh"]
